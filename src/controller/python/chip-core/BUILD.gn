# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")

import("$dir_pw_build/python.gni")

import("${chip_root}/src/platform/python.gni")

pw_python_package("chip-core") {
  setup = [
    "pyproject.toml",
    "setup.cfg",
    "setup.py",
  ]
  sources = [
    "chip/ChipBleBase.py",
    "chip/ChipBleUtility.py",
    "chip/ChipBluezMgr.py",
    "chip/ChipCommissionableNodeCtrl.py",
    "chip/ChipCoreBluetoothMgr.py",
    "chip/ChipStack.py",
    "chip/FabricAdmin.py",
    "chip/__init__.py",
    "chip/ble/__init__.py",
    "chip/ble/commissioning/__init__.py",
    "chip/ble/get_adapters.py",
    "chip/ble/library_handle.py",
    "chip/ble/scan_devices.py",
    "chip/ble/types.py",
    "chip/clusters/Attribute.py",
    "chip/clusters/Command.py",
    "chip/clusters/__init__.py",
    "chip/configuration/__init__.py",
    "chip/discovery/__init__.py",
    "chip/discovery/library_handle.py",
    "chip/discovery/types.py",
    "chip/exceptions/__init__.py",
    "chip/interaction_model/__init__.py",
    "chip/interaction_model/delegate.py",
    "chip/internal/__init__.py",
    "chip/internal/commissioner.py",
    "chip/internal/thread.py",
    "chip/internal/types.py",
    "chip/logging/__init__.py",
    "chip/logging/library_handle.py",
    "chip/logging/types.py",
    "chip/native/__init__.py",
    "chip/setup_payload/__init__.py",
    "chip/setup_payload/setup_payload.py",
    "chip/storage/__init__.py",
    "chip/utils/CommissioningBuildingBlocks.py",
    "chip/utils/__init__.py",
  ]

  if (chip_controller) {
    sources += [
      # These go in chip-repl instead?
      # "chip-core/chip-device-ctrl.py",
      # "chip-core/chip-repl.py",
      "chip/ChipDeviceCtrl.py",
    ]
  } else {
    sources += [
      "chip/server/__init__.py",
      "chip/server/types.py",
    ]
  }
}
